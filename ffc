#!/usr/bin/env bash
# Integrated by mH (https://github.com/matthmr)

#*****************************************************
# change anything that is followed by "#change this" #
#*****************************************************

# ffc: fuzzy find copy
#      uses any implementation of a fuzzy finder (defaults to `fzf`)
#      to fuzzy find clipboard headers generated by `clipmenu`.

dir=${XDG_RUNTIME_DIR-"${TMPDIR-/tmp}"}/clipmenu.6.$USER # change this
#                                    ... but only if I've lagged behind the latest version of clipmenu
cache="$dir/line_cache"

VERSION="v0.1.0"
FUZZY=fzf # change this

usage() {
	printf "Usage: ffc [-o] \"[command]\". See ffc --help\n"
}

if (( $# == 0 )); then
	usage
	exit 1
fi

if [[ $1 = --help || $1 = '-h' ]]; then
	printf "\nIntegrated by mH (https://github.com/matthmr)
		ffc\t\t\t => fuzzy finds clipboard content generated by clipmenu\n
Integration:    fzf\t\t\t => made by junegunn (https://github.com/junegunn/fzf)
		clipmenu\t\t => made by cdown (https://github.com/cdown/clipmenu)\n
Usage:\t\tffc \"[command]\"      \t => Runs a command on the file descriptor for the buffer
	\tffc -o \"[command]\"       => Runs a command on the output of the buffer\n
Info:\t\tffc [--help/-h]\t\t => Displays this message and exit
		ffc [--version/-v]\t => Displays version and exits
		\n"
	exit 0

elif [[ $1 = --version || $1 = '-v' ]]; then
	printf "ffc $VERSION\n"
	exit 0
fi

list() {
    LC_ALL=C sort -rnk 1 < "$cache" | cut -d' ' -f2- | awk '!seen[$0]++'
}

if [[ $1 = '-o' ]]; then
	if (( $# == 1 )); then
		usage
		exit 1
	fi
fi

header=$(list | $FUZZY)
file=$dir/$(cksum <<< "$header")

if [[ $1 = '-o' ]]; then
	clip=$(<"$file")
	${@:2} "$clip"

else
	${@:1} "$file"
fi
