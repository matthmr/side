#!/usr/bin/env bash
# Made by mH (https://github.com/matthmr)

set -o noglob

# hide the cursor (tty only)
printf '\x1b[?16;c'

READINPUT="read -r -n 1 -s key"

SAVE="\x1b[s"
RESTORE="\x1b[u"

HIGHLIGHT="\x1b[7;49;37m"
BULLET=" * "
CLEAR="\x1b[0m$BULLET"

SESSIONS=('awesome' 'dwm' 'i3' 'dwm-git' 'tty')
SESSION=

LEN=${#SESSIONS[@]}
LEN=$(($LEN - 1))
SEQ=$(seq 0 $LEN | tr '\n' ' ')
I=0

# get longest session name; populate the session entry length manifest
HIGH=0
for i in $SEQ
do
	SESSIONLEN+=("${#SESSIONS[i]}")
	if (( $HIGH < ${SESSIONLEN[i]} ))
	then
		HIGH=${SESSIONLEN[i]}
	fi
done

# format session entry
fmt() {
	if (( $2 < $HIGH ))
	then
		local DIFF=$(($HIGH - $2 - 1))
		local PADDING=$(eval "printf ' %.0s' {0..$DIFF}")
	fi

	echo "$1$PADDING"
}

# populate session entry
for i in $SEQ
do
	SESSIONENTRY+=("$BULLET\x1b[1m $(fmt ${SESSIONS[i]} ${SESSIONLEN[i]}) \x1b[0m")
done

# print entry without highlight
clear_current() {
	printf "${SESSIONENTRY[I]}"
}

# move the cursor down:
#  - if on last; return to the saved position
cursor_down() {
	I=$((I+1))

	if [[ $I > $LEN ]]
	then
		I=0
		printf "\x1b[${LEN}F$HIGHLIGHT${SESSIONENTRY[I]}\x1b[0G"
	else
		printf "\x1b[1E$HIGHLIGHT${SESSIONENTRY[I]}\x1b[0G"
	fi

}

# move the cursor up:
#  - if on first; return to the saved position
cursor_up() {
	I=$((I-1))

	if [[ $I = '-1' ]]
	then
		I=$LEN
		printf "\x1b[${LEN}E$HIGHLIGHT${SESSIONENTRY[I]}\x1b[0G"
	else
		printf "\x1b[1F$HIGHLIGHT${SESSIONENTRY[I]}\x1b[0G"
	fi
}

# start the session
#  - if chosen the last one, quit the program
run()
{
	export wm
	case $I in
		$LEN)
			printf "\x1b[1;92m * \x1b[0m Logging in with tty\n\n"
			printf '\x1b[?6;c'
			;;
		*)
			printf "\x1b[1;92m * \x1b[0m Logging in with $SESSION\n\n"
			wm="$SESSION" exec startx
			;;
	esac
}

# handle keypress
handle() {
	if [[ "$1" = "j" ]]
	then
		clear_current
		cursor_down
	elif [[ "$1" = "k" ]]
	then
		clear_current
		cursor_up
	fi
}

list-sessions() {
	for i in $SEQ
	do
		echo "${SESSIONENTRY[i]}"
	done
}

wm() {
	clear
	printf "\n\x1b[1;92m * \x1b[0m Choose a window manager to log in with\n"
	printf "\n$SAVE$HIGHLIGHT$(list-sessions)\n$RESTORE"

	while [[ "$key" != "l" ]]
	do
		$READINPUT
		handle $key
	done

	SESSION=${SESSIONS[I]}
	printf "\n"

	clear
	run
}

wm
