#!/usr/bin/sh

_help() {
		echo "Usage:       emacsserver [start|stop|status|restart|toggle|purge]"
		echo "Description: Starts an emacs server. Simpler version of \`emacs.mh'"
}

case $1 in
    '-h'|'--help')
				_help
				exit 1
				;;
esac

_start() {
    {
				[[ -d /run/user/$UID/emacs && -s /run/user/$UID/emacs/emacs.pid ]]
    } && {
				echo "[ !! ] An emacs server is already running"
				exit 1
    }

    echo "[ .. ] Starting emacs server"

    SHELL=/usr/bin/sh \
				EMACS=/usr/bin/emacs \
				EMACSCLIENT=/usr/bin/emacsclient \
				EMACSCLIENT_OPTS="-s /run/user/$UID/emacs/server" \
        /home/mh/Scripts/emacs-wrapper.sh --daemon
}

_stop() {
    {
				[[ -d /run/user/$UID/emacs && -s /run/user/$UID/emacs/emacs.pid ]]
    } || {
				echo "[ !! ] No emacs server was found"
				exit 1
    }

    echo "[ .. ] Stopping emacs server"

    USER=$USER \
				EMACSCLIENT=/usr/bin/emacsclient \
				EMACSCLIENT_OPTS="-s /run/user/$UID/emacs/server" \
				EMACS_TIMEOUT=10 \
				/home/mh/Scripts/emacs-stop.sh
}

_toggle() {
		if [[ -d /run/user/$UID/emacs ]]; then
				if [[ -f /run/user/$UID/emacs/emacs.pid ]]; then
						_stop
				else
						_start
				fi
		else
				_start
		fi
}

_xtoggle() {
	if [[ -d /run/user/$UID/emacs ]]; then
    if [[ -f /run/user/$UID/emacs/emacs.pid ]]; then
			_stop
    fi
  else
    _start
	fi
}

_restart() {
    _stop && \
				echo "[ .. ] Sleeping" && \
				sleep 5 && \
				_start
}

_status() {
    echo "[ .. ] Getting status for the emacs server"

    {
				[[ -d /run/user/$UID/emacs && -s /run/user/$UID/emacs/emacs.pid ]]
    } && {
				EMACS_PID=$(cat /run/user/$UID/emacs/emacs.pid)
				echo "[ OK ] Found an emacs server running with pid of $EMACS_PID"
				exit 0
    } || {
				echo "[ !! ] No emacs server was found"
				exit 1
    }
}

_purge() {
  if [[ -d /run/user/$UID/emacs && -f /run/user/$UID/emacs/emacs.pid ]]; then
    echo "[ WW ] Found an instance of emacs"
  fi

  rm -rf /run/user/$UID/emacs/emacs.pid
  echo "[ OK ] Purged emacs server"
}

case $1 in
    'start')   _start	   || exit $?;;
    'stop')    _stop	   || exit $?;;
    'status')  _status	 || exit $?;;
    'restart') _restart	 || exit $?;;
    'toggle')  _toggle   || exit $?;;
    'purge')   _purge    || exit $?;;
    'xtoggle') _xtoggle  || exit $?;;
    *) _help; exit 1;;
esac

exit 0
